# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class Abortos(models.Model):
    id_aborto = models.IntegerField(primary_key=True)
    id_prenhez = models.ForeignKey('Prenheces', models.DO_NOTHING, db_column='id_prenhez', blank=True, null=True)
    fecha_aborto = models.DateField(blank=True, null=True)
    causa_aborto = models.CharField(max_length=-1, blank=True, null=True)
    peso_abortado = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'abortos'


class AtributosReproductores(models.Model):
    id_atributo_reproductor = models.IntegerField(primary_key=True)
    fecha_atributo_reproductores = models.DateField(blank=True, null=True)
    genero = models.CharField(max_length=1, blank=True, null=True)
    edad = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    peso = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    tamanho = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    criptorquido = models.NullBooleanField()
    criptorquido_unilateral = models.NullBooleanField()
    problema_indole_reproductivo_vaca = models.NullBooleanField()
    vida_util_vaca = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    vida_util_toro = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    fertilidad = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'atributos_reproductores'


class Bovinos(models.Model):
    id_bovino = models.IntegerField(primary_key=True)
    id_raza = models.ForeignKey('Razas', models.DO_NOTHING, db_column='id_raza', blank=True, null=True)
    id_potrero = models.ForeignKey('Potreros', models.DO_NOTHING, db_column='id_potrero', blank=True, null=True)
    id_padre = models.ForeignKey('self', models.DO_NOTHING, db_column='id_padre', blank=True, null=True)
    id_madre = models.ForeignKey('self', models.DO_NOTHING, db_column='id_madre', blank=True, null=True)
    genero = models.CharField(max_length=1, blank=True, null=True)
    comprado = models.NullBooleanField()
    fecha_nacimiento = models.DateField(blank=True, null=True)
    fecha_destete = models.DateField(blank=True, null=True)
    fecha_venta = models.DateField(blank=True, null=True)
    peso_nacimiento = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    peso_actual = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    peso_destete = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    peso_madre_destete = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    peso_12_meses = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    peso_venta = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    tamanho = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bovinos'


class CalendarioSanitario(models.Model):
    id_calendario_sanitario = models.IntegerField(primary_key=True)
    nombre_vacuna = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'calendario_sanitario'


class Castraciones(models.Model):
    id_castracion = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    fecha_castracion = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'castraciones'


class CicloEstralVacas(models.Model):
    id_ciclo_estral = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    fecha_modificacion_registro = models.DateField(blank=True, null=True)
    duracion_ciclo_estral = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    duracion_proestro = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    duracion_estro_o_celo = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    duracion_metaestro = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    duracion_diestro = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    aparicion_ovulacion = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    tipo_observacion = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ciclo_estral_vacas'


class Destetes(models.Model):
    id_destete = models.IntegerField(primary_key=True)
    id_parto = models.ForeignKey('Partos', models.DO_NOTHING, db_column='id_parto', blank=True, null=True)
    fecha_destete = models.DateField(blank=True, null=True)
    peso_madre_destete = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'destetes'


class Enfermedades(models.Model):
    id_enfermedad = models.IntegerField(primary_key=True)
    tipo_enfermedad = models.CharField(max_length=-1, blank=True, null=True)
    nombre_enfermedad = models.CharField(max_length=-1, blank=True, null=True)
    descripcion_enfermedad = models.CharField(max_length=-1, blank=True, null=True)
    tratamiento_curativo = models.NullBooleanField()
    tratamiento_preventivo = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'enfermedades'


class Enfermos(models.Model):
    id_enfermo = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    id_enfermedad = models.ForeignKey(Enfermedades, models.DO_NOTHING, db_column='id_enfermedad', blank=True, null=True)
    descripcion_enfermo = models.CharField(max_length=-1, blank=True, null=True)
    fecha_deteccion_enfermedad = models.DateField(blank=True, null=True)
    fecha_curacion_enfermedad = models.DateField(blank=True, null=True)
    peso_deteccion_enfermedad = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    peso_curacion_enfermedad = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'enfermos'


class Estancias(models.Model):
    id_estancia = models.IntegerField(primary_key=True)
    id_propietario = models.ForeignKey('Propietarios', models.DO_NOTHING, db_column='id_propietario', blank=True, null=True)
    nombre_estancia = models.CharField(max_length=-1, blank=True, null=True)
    ubicacion_estancia = models.CharField(max_length=-1, blank=True, null=True)
    extension = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    region = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'estancias'


class Inseminaciones(models.Model):
    id_inseminacion = models.IntegerField(primary_key=True)
    id_bovino_padre = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino_padre', blank=True, null=True)
    id_bovino_madre = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino_madre', blank=True, null=True)
    fecha_inseminacion = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'inseminaciones'


class Lactancias(models.Model):
    id_lactancia = models.IntegerField(primary_key=True)
    id_parto = models.ForeignKey('Partos', models.DO_NOTHING, db_column='id_parto', blank=True, null=True)
    fecha_ordenho = models.DateField(blank=True, null=True)
    litros_manhana = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    litros_tarde = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'lactancias'


class MarcacionesCarimbadas(models.Model):
    id_marcacion = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    fecha_marcacion = models.DateField(blank=True, null=True)
    fecha_carimbada = models.DateField(blank=True, null=True)
    fecha_identificacion_vientre = models.DateField(blank=True, null=True)
    numero_carimbo = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    marca = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'marcaciones_carimbadas'


class Muertes(models.Model):
    id_muerte = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    causa_muerte = models.CharField(max_length=-1, blank=True, null=True)
    fecha_muerte = models.DateField(blank=True, null=True)
    peso_al_morir = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'muertes'


class Palpaciones(models.Model):
    id_palpacion = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    fecha_palpacion = models.DateField(blank=True, null=True)
    resultado_palpacion = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'palpaciones'


class Partos(models.Model):
    id_parto = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    id_prenhez = models.ForeignKey('Prenheces', models.DO_NOTHING, db_column='id_prenhez', blank=True, null=True)
    fecha_parto = models.DateField(blank=True, null=True)
    genero_cria = models.CharField(max_length=1, blank=True, null=True)
    peso_nacimiento = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    tipo_parto = models.CharField(max_length=-1, blank=True, null=True)
    fin_periodo_puerperio_real = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'partos'


class Plantel(models.Model):
    id_plantel = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    id_servidor = models.ForeignKey('Servidores', models.DO_NOTHING, db_column='id_servidor', blank=True, null=True)
    activo = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'plantel'


class Potreros(models.Model):
    id_potrero = models.IntegerField(primary_key=True)
    id_estancia = models.ForeignKey(Estancias, models.DO_NOTHING, db_column='id_estancia', blank=True, null=True)
    nombre_potrero = models.CharField(max_length=-1, blank=True, null=True)
    tamanho_potrero = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    tipo_pastura = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'potreros'


class Prenheces(models.Model):
    id_prenhez = models.IntegerField(primary_key=True)
    id_servicio = models.ForeignKey('Servicios', models.DO_NOTHING, db_column='id_servicio', blank=True, null=True)
    fecha_prevista_parto = models.DateField(blank=True, null=True)
    fin_periodo_puerperio_aproximado = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'prenheces'


class PropieCicloReproductivo(models.Model):
    id_propie_ciclo_reproductivo = models.IntegerField(primary_key=True)
    fecha_propie_ciclo_reproductivo = models.DateField(blank=True, null=True)
    descripcion_propie_ciclo_reproductivo = models.CharField(max_length=-1, blank=True, null=True)
    periodo_inicio = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    periodo_fin = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    metrica = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'propie_ciclo_reproductivo'


class Propietarios(models.Model):
    id_propietario = models.IntegerField(primary_key=True)
    cedula_o_ruc = models.CharField(max_length=-1, blank=True, null=True)
    nombre_o_razonsocial = models.CharField(max_length=-1, blank=True, null=True)
    direccion = models.CharField(max_length=-1, blank=True, null=True)
    telefono = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'propietarios'


class Razas(models.Model):
    id_raza = models.IntegerField(primary_key=True)
    nombre_raza = models.CharField(max_length=-1, blank=True, null=True)
    origen_raza = models.CharField(max_length=-1, blank=True, null=True)
    color = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'razas'


class Servicios(models.Model):
    id_servicio = models.IntegerField(primary_key=True)
    id_bovino_padre = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino_padre', blank=True, null=True)
    id_bovino_madre = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino_madre', blank=True, null=True)
    fecha_servicio = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'servicios'


class Servidores(models.Model):
    id_servidor = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    activo = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'servidores'


class Tratamientos(models.Model):
    id_tratamiento = models.IntegerField(primary_key=True)
    id_enfermedad = models.ForeignKey(Enfermedades, models.DO_NOTHING, db_column='id_enfermedad', blank=True, null=True)
    descripcion_tratamiento = models.CharField(max_length=-1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tratamientos'


class Vacunaciones(models.Model):
    id_vacunacion = models.IntegerField(primary_key=True)
    id_calendario_sanitario = models.ForeignKey(CalendarioSanitario, models.DO_NOTHING, db_column='id_calendario_sanitario', blank=True, null=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    fecha_vacunacion = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'vacunaciones'


class Ventas(models.Model):
    id_venta = models.IntegerField(primary_key=True)
    id_bovino = models.ForeignKey(Bovinos, models.DO_NOTHING, db_column='id_bovino', blank=True, null=True)
    fecha_venta = models.DateField(blank=True, null=True)
    peso_bovino = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)
    precio_bovino_kilo_vivo = models.DecimalField(max_digits=65535, decimal_places=65535, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ventas'
